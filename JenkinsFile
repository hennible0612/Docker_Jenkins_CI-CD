pipeline {
    agent any

    environment {
        // 환경 변수로 태그 설정
        DOCKER_TAG = "latest" // 또는 Jenkins 변수를 사용하여 동적으로 설정 가능, 예: ${BUILD_NUMBER}
        REPO_NAME = "sungwoo166/jenkins"
    }

    stages {
        stage('Check Docker') {
            steps {
                script {
                    try {
                        sh 'docker --version'
                    } catch(Exception e) {
                        echo 'ERROR: Docker is not installed or not found in PATH'
                        echo "Caught: ${e}"
                    }
                }
            }
        }

        stage('Clone Repository') {
            steps {
                git branch: 'main', url: "https://github.com/hennible0612/Docker_Jenkins_CI-CD"
            }
        }

        stage('Prepare Environment') {
            steps {
                sh 'chmod +x ./gradlew'
            }
        }

        stage('Build Project') {
            steps {
                sh './gradlew clean build'
            }
        }

        stage('Docker Login') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub', passwordVariable: 'DOCKER_PWD', usernameVariable: 'DOCKER_USR')]) {
                    sh 'echo $DOCKER_PWD | docker login -u $DOCKER_USR --password-stdin'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                sh "docker build -t ${REPO_NAME}:${DOCKER_TAG} ."
            }
        }

        stage('Push Docker Image') {
            steps {
                sh "docker push ${REPO_NAME}:${DOCKER_TAG}"
            }
        }
    }
}
